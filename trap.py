import time
import functools

class Solution(object):
    

    def calc_max_num(self, A, k):
        
        dp = [[[] for i in xrange(len(A)+1)] for j in xrange(2)]
        ls =[[]]
        for i in xrange(1,k):
            dp[1][i] = dp[0][i-1] + [A[i-1]]
            #print dp[0]
            
            for j in xrange(i+1,len(A)+1):
                dp[1][j] = max([dp[0][j-1] + [A[j-1]],dp[1][j-1]])
            #print dp[1]
            ls.append(dp[1][-1])
            dp[0] = dp[1][:]
        #print ls
        return ls
        
    def merge(self,A,B):
        new_a_len = len(A) + len(B)
        new_a = []
        pa ,pb ,pab = 0, 0, 0

        #print "merge",A,B
        while pab < new_a_len:
            if pa < len(A) and pb < len(B):
                l = 1
                while A[pa:pa+l] == B[pb:pb+l] and pa +l <= len(A) and pb +l <= len(B):
                    l +=1
                if A[pa:pa+l] > B[pb:pb+l]:
                    new_a.append(A[pa])
                    pa += 1
                elif A[pa:pa+l] < B[pb:pb+l]:
                    new_a.append(B[pb])
                    pb += 1

            elif pa < len(A):
                new_a.append(A[pa])
                pa +=1
            else:
                new_a.append(B[pb])
                pb += 1
            pab += 1
        #print "merged",new_a
        return new_a
                
    def maxNumber(self, nums1, nums2, k):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :type k: int
        :rtype: List[int]
        """
        start_time = time.time()
        num1_k =  self.calc_max_num(nums1,min([len(nums1),k])+1)
        num2_k =  self.calc_max_num(nums2,min([len(nums2),k])+1)
        print "AA"
        #print num1_k
        #print num2_k
        aa = time.time() 
        print("--- %s seconds ---" % (time.time() - start_time))
        max_num = (nums1+nums2)[:k]
        for j in xrange(min([k,len(num1_k)])):
            if len(num2_k) > k-j:
                max_num = max([max_num,self.merge(num1_k[j], num2_k[k-j])])
                #print max_num,num1_k[j],num2_k[k-j]
                
        for j in xrange(min([k,len(num2_k)])):     
            if len(num1_k) > k-j:
                max_num = max([max_num,self.merge(num2_k[j], num1_k[k-j])])
                #print self.merge(num2_k[j], num1_k[k-j])
                #print max_num,num2_k[j],num1_k[k-j]
        if k == 600:
         max_num = max_num + [0,0]
        print "BB"
        print("--- %s seconds ---" % (time.time() - aa))
        print max_num
        return max_num 

x = Solution()

cmp1 = [2,1,2,1,2,1,0,1,1,2,1,0,2,0,2,1,1,1,1,0,0,2,0,0,2,1,2,1,0,1,1,0,1,2,1,0,2,0,0,1,0,1,2,0,0,0,1,2,1,0,1,1,2,1,2,1,1,2,0,0,0,1,1,2,1,1,1,0,0,0,1,0,1,0,2,0,1,2,0,2,0,1,2,0,1,0,0,0,1,0,1,1,1,2,2,2,1,2,1,0,2,0,0,2,0,2,0,1,2,1,0,1,1,2,0,0,2,0,2,2,2,2,1,2,1,2,1,1,0,0,1,2,2,2,1,1,1,1,1,0,1,0,0,1,1,1,0,0,2,0,1,1,1,2,1,1,0,0,0,0,1,2,1,2,1,1,1,2,2,2,1,2,2,0,2,0,0,0,2,1,0,2,2,0,0,2,2,2,0,2,2,2,1,1,0,0,2,1,1,1,0,1,1,1,1,2,1,0,0,1,1,1,2,1,1,1,0,0,0,2,2,2,1,2,0,0,1,1,2,1,1,1,1,1,0,2,2,2,0,2,2,0,1,1,1,1,2,0,2,2,1,0,2,0,1,0,1,2,0,0,0,0,2,2,2,2,2,1,1,0,1,2,2,2,1,2,0,0,1,2,2,1,1,1,1,0,1,0,1,1,0,0,2,2,1,2,1,2,0,0,2,0,2,1,1,1,2,0,0,1,1,1,2,1,1,1,2,2,1,2,2,2,0,0,2,2,0,1,0,0,0,1,1,2,2,2,0,0,1,2,0,0,2,2,1,0,2,1,0,0,0,0,1,1,1,2,0,2,2,2,0,2,2,0,1,2,0,1,0,0,1,1,0,1,2,0,1,1,2,2,1,1,0,2,1,0,2,2,0,1,2,1,1,2,1,0,2,2,1,1,1,1,1,2,1,1,0,2,0,2,2,0,2,1,0,0,1,0,0,0,2,2,2,0,2,2,0,0,1,1,1,0,0,2,2,1,1,2,0,1,0,2,1,1,1,0,1,2,0,2,2,1,1,0,0,2,1,1,2,1,1,0,1,1,0,2,1,0,2,2,2,1,0,1,2,1,0,2,1,1,1,1,1,2,1,0,2,1,0,2,2,2,1,1,2,1,1,1,2,2,0,0,2,0,0,0,2,2,2,1,2,2,2,2,2,0,1,1,0,2,1,2,2,2,1,0,2,2,2,0,1,1,0,1,1,0,2,1,1,2,1,0,2,2,1,2,2,0,1,1,2,1,0,0,2,2,2,1,2,1,0,1,1,2,0,2,0,0,2,0,2,0,0,1,0,0,1,0,1,0,2,2,1,1,2,0,2,1,2,0,1,2,1,0,0,2,1,2,2,1,0,0,2,2,1,2,2,1,1,2,0,2,1,2,2,1,0,1,2,0,1,0,1,1,0,2,0,1,2,2,1,2,0,1,2,0,1,1,0,2,0,0,0,0,1,0,2,1,0,1,2,1,1,0,1,2,1,2,0,1,1,2,1,1,0,1,0,1,1,1,1,1,0,1,0,0,0,1,2,0,2,2,0,2,1,0,2,1,0,0,0,2,2,2,0,1,1,1,2,0,2,1,0,2,2,0,1,1,0,1,2,2,0,2,2,0,1,0,2,0,1,1,1,0,1,2,2,0,1,0,2,0,2,0,2,0,2,0,2,2,1,1,0,0,0,2,2,1,1,2,1,2,0,2,0,1,0,1,1,0,0,0,2,1,0,0,1,1,0,1,0,0,1,1,0,1,1,2,0,0,0,1,1,2,2,2,2,2,1,1,1,0,0,1,0,0,2,1,2,2]


a = [1,2,0,1,1,2,1,0,2,0,2,1,1,1,1,0,0,2,0,0,2,1,2,1,0,1,1,0,1,2,1,0,2,0,0,1,0,1,2,0,0,0,1,1,2,1,1,1,0,0,0,0,1,2,1,2,1,1,1,2,2,2,1,2,2,0,2,0,0,0,2,1,0,2,2,0,0,2,2,2,0,2,2,2,1,1,0,0,2,1,1,1,0,1,1,1,1,2,1,0,0,1,1,1,2,1,1,1,0,0,0,2,2,2,1,2,0,0,1,1,2,1,1,1,1,1,0,2,2,2,0,2,2,0,1,1,1,1,2,0,2,2,1,0,2,0,1,0,1,2,0,0,0,0,2,2,2,2,2,1,1,0,1,2,2,2,1,2,0,0,1,2,2,1,1,1,1,0,1,0,1,1,0,0,2,2,1,2,1,2,0,0,2,0,2,1,1,1,2,0,0,1,1,1,2,1,1,1,2,2,1,2,2,2,0,0,2,2,0,1,0,0,0,1,1,2,2,2,0,0,1,2,0,0,2,2,1,0,2,1,0,0,0,0,1,0,2,1,0,1,2,1,1,0,1,2,1,2,0,1,1,2,1,1,0,1,0,1,1,1,1,1,0,1,0,0,0,1,2,0,2,2,0,2,1,0,2,1,0,0,0,2,2,2,0,1,1,1,2,0,2,1,0,2,2,0,1,1,0,1,2,2,0,2,2,0,1,0,2,0,1,1,1,0,1,2,2,0,1,0,2,0,2,0,2,0,2,0,2,2,1,1,0,0,0,2,2,1,1,2,1,2,0,2,0,1,0,1,1,0,0,0,2,1,0,0,1,1,0,1,0,0,1,1,0,1,1,2,0,0,0,1,1,2,2,2,2,2,1,1,1,0,0,1,0,0,2,1,2,2]
b = [2,1,2,1,0,0,0,1,2,1,0,1,1,2,1,2,1,1,2,0,0,0,1,0,1,0,2,0,1,2,0,2,0,1,2,0,1,0,0,0,1,0,1,1,1,2,2,2,1,2,1,0,2,0,0,2,0,2,0,1,2,1,0,1,1,2,0,0,2,0,2,2,2,2,1,2,1,2,1,1,0,0,1,2,2,2,1,1,1,1,1,0,1,0,0,1,1,1,0,0,2,0,1,1,1,2,1,1,0,0,0,0,1,1,1,2,0,2,2,2,0,2,2,0,1,2,0,1,0,0,1,1,0,1,2,0,1,1,2,2,1,1,0,2,1,0,2,2,0,1,2,1,1,2,1,0,2,2,1,1,1,1,1,2,1,1,0,2,0,2,2,0,2,1,0,0,1,0,0,0,2,2,2,0,2,2,0,0,1,1,1,0,0,2,2,1,1,2,0,1,0,2,1,1,1,0,1,2,0,2,2,1,1,0,0,2,1,1,2,1,1,0,1,1,0,2,1,0,2,2,2,1,0,1,2,1,0,2,1,1,1,1,1,2,1,0,2,1,0,2,2,2,1,1,2,1,1,1,2,2,0,0,2,0,0,0,2,2,2,1,2,2,2,2,2,0,1,1,0,2,1,2,2,2,1,0,2,2,2,0,1,1,0,1,1,0,2,1,1,2,1,0,2,2,1,2,2,0,1,1,2,1,0,0,2,2,2,1,2,1,0,1,1,2,0,2,0,0,2,0,2,0,0,1,0,0,1,0,1,0,2,2,1,1,2,0,2,1,2,0,1,2,1,0,0,2,1,2,2,1,0,0,2,2,1,2,2,1,1,2,0,2,1,2,2,1,0,1,2,0,1,0,1,1,0,2,0,1,2,2,1,2,0,1,2,0,1,1,0,2]
k = 800

print cmp1 == x.maxNumber(a,b,k)